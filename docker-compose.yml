networks:
  kestra_network:
    name: kestra_network
    driver: bridge

services:
  kestra-metadata:
    image: postgres:17-alpine
    container_name: kestra-metadata
    networks:
      - kestra_network
    volumes:
      - vol-kestra-metadata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    container_name: kestra    
    networks:
      - kestra_network
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - vol-kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra-metadata:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io"
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      kestra-metadata:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    networks:
      - kestra_network
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'nyc_taxi'
    ports:
      - '5432:5432'
    volumes:
      - vol-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    networks:
      - kestra_network
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@pgadmin.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin"
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: "False"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
    ports:
      - "9000:80"
    volumes:
      - vol-pgadmin_data:/var/lib/pgadmin  
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80/ || exit 1"]
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 5
    restart: on-failure:5

volumes:
  vol-pgdata:
    name: vol-pgdata
  vol-pgadmin_data:
    name: vol-pgadmin_data
  vol-kestra-metadata:
    name: vol-kestra-metadata
  vol-kestra-data:
    name: vol-kestra-data
